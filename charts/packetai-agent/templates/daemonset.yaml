apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "packetai-agent.fullname" . }}
  namespace: kube-system
  labels:
    k8s-app: {{ template "packetai-agent.fullname" . }}
spec:
  selector:
    matchLabels:
      k8s-app: {{ template "packetai-agent.fullname" . }}
  template:
    metadata:
      labels:
        k8s-app: {{ template "packetai-agent.fullname" . }}
    spec:
      serviceAccountName: {{ template "packetai-agent.fullname" . }}
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: pai-node-agent
        image: "{{ .Values.nodeAgent.image.repository }}:{{ .Values.global.imageTag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.nodeAgent.image.pullPolicy }}
        args: ["-level", "host"]
        env:
        {{- if .Values.global.kubeStateMetrics.enabled }}
        - name: KUBERNETES_STATE_METRICS_ENDPOINT
          value: {{ (printf "%s-kube-state-metrics:8080" (.Release.Name)) }}
        {{- else }}  
        - name: KUBERNETES_STATE_METRICS_ENDPOINT
          value: {{ required "global.kubeStateMetrics.url is compulsory to collect metrics" .Values.global.kubeStateMetrics.url }}
        {{- end }}
        - name: KUBERNETES_PROXY_ENDPOINT
          value: {{ .Values.global.k8sProxyEndPoint }}
        - name: APIDEVURL
          value: {{ required "global.apiUrl is compulsory" .Values.global.apiUrl }}
        - name: X_PAI_TOKEN
          value: {{ required "global.xPaiToken is compulsory" .Values.global.xPaiToken }}
        - name: PAI_API_KEY
          value: {{ required "global.paiApiKey is compulsory" .Values.global.paiApiKey }}
        - name: CLUSTER_NAME
          value:  {{ required "global.clusterName is compulsory" .Values.global.clusterName }}
        {{- if .Values.global.logsEnable }}  
        - name: FILEBEAT
          value:  "ON"
        {{- else }}
        - name: FILEBEAT
          value:  "OFF"
        {{- end}}
        - name: BLACK_LIST_CONTAINERS_NAME_PATTERN
          value:  {{ .Values.global.blacklistContainers }}
        - name: WHITE_LIST_NAMESPACES
          value:  {{ .Values.global.whitelistNamespaces }}
        - name: NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          runAsUser: 0
          # If using Red Hat OpenShift uncomment this:
          #privileged: true
        resources:
            {{- toYaml .Values.nodeAgent.resources | nindent 12 }}
        volumeMounts:
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: data
          mountPath: /etc/packetai
      {{- with .Values.nodeAgent.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeAgent.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeAgent.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: data
        hostPath:
          # When metricbeat runs as non-root user, this directory needs to be writable by group (g+w)
          path: /etc/packetai
          type: DirectoryOrCreate